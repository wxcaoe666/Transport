<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 设置为IUserDao接口方法提供sql语句配置 -->
<mapper namespace="com.dao.IOutcarrecordDao">

    <resultMap id="BaseResultMap" type="com.model.Outcarrecordlist">
        <id column="ID" property="ID" jdbcType="INTEGER"/>
        <result column="DeleteFlag" property="DeleteFlag" jdbcType="INTEGER"/>
        <result column="UserID" property="UserID" jdbcType="INTEGER"/>
        <result column="Name" property="Name" jdbcType="VARCHAR"/>
        <result column="IsAllow" property="IsAllow" jdbcType="INTEGER"/>
        <result column="StartingAddress" property="StartingAddress" jdbcType="VARCHAR"/>
        <result column="DestinationAddress" property="DestinationAddress" jdbcType="TIMESTAMP"/>
        <result column="State" property="State" jdbcType="INTEGER"/>
        <result column="VehicleID" property="VehicleID" jdbcType="INTEGER"/>
        <result column="CreateDate" property="CreateDate" jdbcType="TIMESTAMP"/>
        <result column="IsRevocation" property="IsRevocation" jdbcType="INTEGER"/>
    </resultMap>

    <resultMap id="BaseResultMap1" type="com.model.Outcarrecord">
        <id column="ID" property="ID" jdbcType="INTEGER"/>
        <result column="DeleteFlag" property="DeleteFlag" jdbcType="INTEGER"/>
        <result column="UserID" property="UserID" jdbcType="INTEGER"/>
        <result column="IsAllow" property="IsAllow" jdbcType="INTEGER"/>
        <result column="StartingAddress" property="StartingAddress" jdbcType="VARCHAR"/>
        <result column="DestinationAddress" property="DestinationAddress" jdbcType="TIMESTAMP"/>
        <result column="State" property="State" jdbcType="INTEGER"/>
        <result column="VehicleID" property="VehicleID" jdbcType="INTEGER"/>
        <result column="CreateDate" property="CreateDate" jdbcType="TIMESTAMP"/>
        <result column="IsRevocation" property="IsRevocation" jdbcType="INTEGER"/>
    </resultMap>
<!--所有出车记录-->
    <select id="getalllist" resultMap="BaseResultMap">
        SELECT
            a.ID as ID,
            a.DeleteFlag as DeleteFlag,
            a.UserID as UserID,
            b.Name as Name,
            a.IsAllow as IsAllow,
            a.StartingAddress as StartingAddress,
            a.DestinationAddress as DestinationAddress,
            a.State as State,
            c.ID as VehicleID,
            a.CreateDate as CreateDate,
            a.IsRevocation as IsRevocation
        FROM
            outcarrecord as a left join user as b on a.UserID=b.ID
                              left join vehicle as c on a.VehicleID=c.ID
        WHERE a.DeleteFlag=0 order by CreateDate asc
    </select>

    <!--个人所有维修记录-->
    <select id="getalllistbyid" resultMap="BaseResultMap" parameterType="int">
        SELECT
            a.ID as ID,
            a.DeleteFlag as DeleteFlag,
            a.UserID as UserID,
            b.Name as Name,
            a.IsAllow as IsAllow,
            a.StartingAddress as StartingAddress,
            a.DestinationAddress as DestinationAddress,
            a.State as State,
            c.ID as VehicleID,
            a.CreateDate as CreateDate,
            a.IsRevocation as IsRevocation
        FROM
            outcarrecord as a left join user as b on a.UserID=b.ID
                              left join vehicle as c on a.VehicleID=c.ID
        WHERE a.DeleteFlag=0 and a.UserID=#{UserID} order by CreateDate asc
    </select>

    <!--个人所有是否已允许的维修记录-->
    <select id="getIsAllowbyid" resultMap="BaseResultMap" parameterType="int">
        SELECT
            a.ID as ID,
            a.DeleteFlag as DeleteFlag,
            a.UserID as UserID,
            b.Name as Name,
            a.IsAllow as IsAllow,
            a.StartingAddress as StartingAddress,
            a.DestinationAddress as DestinationAddress,
            a.State as State,
            c.ID as VehicleID,
            a.CreateDate as CreateDate,
            a.IsRevocation as IsRevocation
        FROM
            outcarrecord as a left join user as b on a.UserID=b.ID
                              left join vehicle as c on a.VehicleID=c.ID
        WHERE a.DeleteFlag = 0 and a.UserID=#{UserID} and a.IsAllow=#{IsAllow} and a.State!=2
        order by CreateDate asc
    </select>


    <!--个人所有已完成的维修记录-->
    <select id="getstatebyid" resultMap="BaseResultMap" parameterType="int">
        SELECT
            a.ID as ID,
            a.DeleteFlag as DeleteFlag,
            a.UserID as UserID,
            b.Name as Name,
            a.IsAllow as IsAllow,
            a.StartingAddress as StartingAddress,
            a.DestinationAddress as DestinationAddress,
            a.State as State,
            c.ID as VehicleID,
            a.CreateDate as CreateDate,
            a.IsRevocation as IsRevocation
        FROM
            outcarrecord as a left join user as b on a.UserID=b.ID
                              left join vehicle as c on a.VehicleID=c.ID
        WHERE a.DeleteFlag = 0 and a.UserID=#{UserID} and a.State=2
        order by CreateDate asc
    </select>

    <!--个人所有已撤销的的出车记录-->
    <select id="getIsRevocationbyid" resultMap="BaseResultMap" parameterType="int">
        SELECT
            a.ID as ID,
            a.DeleteFlag as DeleteFlag,
            a.UserID as UserID,
            b.Name as Name,
            a.IsAllow as IsAllow,
            a.StartingAddress as StartingAddress,
            a.DestinationAddress as DestinationAddress,
            a.State as State,
            c.ID as VehicleID,
            a.CreateDate as CreateDate,
            a.IsRevocation as IsRevocation
        FROM
            outcarrecord as a left join user as b on a.UserID=b.ID
                              left join vehicle as c on a.VehicleID=c.ID
        WHERE a.DeleteFlag = 0 and a.UserID=#{UserID} and a.IsRevocation=1
        order by CreateDate asc
    </select>

<!--未允许且未撤销的出车申请-->
    <select id="getIsAllowlist" resultMap="BaseResultMap">
        SELECT
        a.ID as ID,
        a.DeleteFlag as DeleteFlag,
        a.UserID as UserID,
        b.Name as Name,
        a.IsAllow as IsAllow,
        a.StartingAddress as StartingAddress,
        a.DestinationAddress as DestinationAddress,
        a.State as State,
        c.ID as VehicleID,
        a.CreateDate as CreateDate,
        a.IsRevocation as IsRevocation
        FROM
         outcarrecord as a left join user as b on a.UserID=b.ID
                           left join vehicle as c on a.VehicleID=c.ID
        WHERE a.DeleteFlag=0 and a.IsAllow=0 and IsRevocation=0 order by CreateDate asc
    </select>

    <!--已撤销的出车申请-->
    <select id="getIsRevocation" resultMap="BaseResultMap">
        SELECT
            a.ID as ID,
            a.DeleteFlag as DeleteFlag,
            a.UserID as UserID,
            b.Name as Name,
            a.IsAllow as IsAllow,
            a.StartingAddress as StartingAddress,
            a.DestinationAddress as DestinationAddress,
            a.State as State,
            c.ID as VehicleID,
            a.CreateDate as CreateDate,
            a.IsRevocation as IsRevocation
        FROM
            outcarrecord as a left join user as b on a.UserID=b.ID
                              left join vehicle as c on a.VehicleID=c.ID
        WHERE a.DeleteFlag=0 and IsRevocation=1 order by CreateDate asc
    </select>

    <select id="selectoutcarrecordbyuserID" parameterType="int" resultMap="BaseResultMap1">
        select * from outcarrecord where DeleteFlag=0 and UserID=#{userID} and IsAllow=0
    </select>

    <select id="selectoutcarrecordbyvehicleID" parameterType="int" resultMap="BaseResultMap1">
        select * from outcarrecord where DeleteFlag=0 and VehicleID=#{vehicleID} and IsAllow=0
    </select>

    <insert id="addoutcarrecord" useGeneratedKeys="true" parameterType="com.model.Outcarrecord">
        insert into outcarrecord (ID,DeleteFlag,UserID,IsAllow,StartingAddress,DestinationAddress,State,VehicleID,CreateDate)
        value (#{ID},#{DeleteFlag},#{UserID},#{IsAllow},#{StartingAddress},#{DestinationAddress},#{State},#{VehicleID},#{CreateDate})
    </insert>

    <select id="selectoutcarrecordbyID" parameterType="int" resultMap="BaseResultMap1">
        select * from outcarrecord where DeleteFlag=0 and ID=#{ID}
    </select>

<!--  出车记录是否完成  -->
    <select id="selectstatebyUserID" parameterType="int" resultMap="BaseResultMap1">
        select * from outcarrecord where DeleteFlag=0 and UserID=#{UserID} and State!=2 and IsRevocation=0
    </select>

    <!--  VehicleID出车记录是否完成  -->
    <select id="selectstatebyVehiclevID" parameterType="int" resultMap="BaseResultMap1">
        select * from outcarrecord where DeleteFlag=0 and VehicleID=#{VehicleID} and State!=2 and IsRevocation=0
    </select>

<!-- 删除出车申请  -->
    <update id="deleteoutcarrecord" useGeneratedKeys="true">
        update outcarrecord set DeleteFlag=1 where ID=#{ID}
    </update>
<!--撤销出车申请-->
    <update id="revocationoutcarrecord" useGeneratedKeys="true">
        update outcarrecord set IsRevocation=1,IsAllow=0 where ID=#{ID}
    </update>

    <!--修改出车申请状况-->
    <update id="outcarrecordIsAllow" useGeneratedKeys="true" flushCache="true">
        update outcarrecord
        set IsAllow=#{IsAllow}
        where ID = #{ID}
    </update>

    <!--修改出车状态-->
    <update id="outcarrecordState" useGeneratedKeys="true" flushCache="true">
        update outcarrecord
        set State=#{State}
        where ID = #{ID}
    </update>

    <!--修改出车申请-->
    <update id="updateoutcarrecord" useGeneratedKeys="true" flushCache="true" parameterType="com.model.Outcarrecord">
        update outcarrecord
        set VehicleID=#{VehicleID},
            StartingAddress=#{StartingAddress},
            DestinationAddress=#{DestinationAddress},
            State=#{State},
            IsRevocation=#{IsRevocation}
        where ID = #{ID}
    </update>

<!--    <insert id="register" parameterType="com.model.User" flushCache="true">-->
<!--        INSERT INTO user-->
<!--            (Email,Password,UserName,Role,DeleteFlag,CreateTime,Guid,Sex,Name,Phone)-->
<!--            VALUE(#{Email},#{Password},#{UserName},#{Role},#{DeleteFlag},#{CreateTime},#{Guid},#{Sex},#{Name},#{Phone})-->
<!--    </insert>-->

<!--    <update id="updateUser" parameterType="com.model.User" flushCache="true">
        UPDATE user set
                        email = #{email},
                        password = #{password},
                        username = #{username},
                        role = #{role},
                        status = #{status},
                        regTime = #{regTime},
                        regIp = #{regIp}
        WHERE id = #{id}
    </update>

    <update id="deleteUser"  parameterType="int" flushCache="true" >
        update user set DeletFlag=1 where id = #{id}
    </update>-->
</mapper>