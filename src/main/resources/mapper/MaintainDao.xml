<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 设置为IUserDao接口方法提供sql语句配置 -->
<mapper namespace="com.dao.IMaintainDao">

    <resultMap id="BaseResultMap" type="com.model.Maintainlist">
        <id column="ID" property="ID" jdbcType="INTEGER"/>
        <result column="DeleteFlag" property="DeleteFlag" jdbcType="INTEGER"/>
        <result column="UserID" property="UserID" jdbcType="INTEGER"/>
        <result column="Name" property="Name" jdbcType="VARCHAR"/>
        <result column="IsAllow" property="IsAllow" jdbcType="INTEGER"/>
        <result column="MaintainCause" property="MaintainCause" jdbcType="VARCHAR"/>
        <result column="PlateNumber" property="PlateNumber" jdbcType="VARCHAR"/>
        <result column="State" property="State" jdbcType="INTEGER"/>
        <result column="VehicleID" property="VehicleID" jdbcType="INTEGER"/>
        <result column="MaintenanceAmount" property="MaintenanceAmount" jdbcType="INTEGER"/>
        <result column="MaintainDate" property="MaintainDate" jdbcType="TIMESTAMP"/>
        <result column="IsRevocation" property="IsRevocation" jdbcType="INTEGER"/>
    </resultMap>

    <resultMap id="BaseResultMap1" type="com.model.Maintain">
        <id column="ID" property="ID" jdbcType="INTEGER"/>
        <result column="DeleteFlag" property="DeleteFlag" jdbcType="INTEGER"/>
        <result column="UserID" property="UserID" jdbcType="INTEGER"/>
        <result column="IsAllow" property="IsAllow" jdbcType="INTEGER"/>
        <result column="MaintainCause" property="MaintainCause" jdbcType="VARCHAR"/>
        <result column="State" property="State" jdbcType="INTEGER"/>
        <result column="VehicleID" property="VehicleID" jdbcType="INTEGER"/>
        <result column="MaintenanceAmount" property="MaintenanceAmount" jdbcType="INTEGER"/>
        <result column="MaintainDate" property="MaintainDate" jdbcType="TIMESTAMP"/>
        <result column="IsRevocation" property="IsRevocation" jdbcType="INTEGER"/>
    </resultMap>
    <!--所有维修记录-->
    <select id="getalllist" resultMap="BaseResultMap">
        SELECT a.ID                as ID,
               a.DeleteFlag        as DeleteFlag,
               a.UserID            as UserID,
               b.Name              as Name,
               a.IsAllow           as IsAllow,
               a.MaintainCause     as MaintainCause,
               c.PlateNumber       as PlateNumber,
               a.MaintenanceAmount as MaintenanceAmount,
               a.State             as State,
               a.VehicleID         as VehicleID,
               a.MaintainDate      as MaintainDate,
               a.IsRevocation      as IsRevocation
        FROM maintain as a
                 left join user as b on a.UserID = b.ID
                 left join vehicle as c on a.VehicleID = c.ID
        WHERE a.DeleteFlag = 0
        order by MaintainDate asc
    </select>

    <!--个人所有维修记录-->
    <select id="getalllistbyid" resultMap="BaseResultMap" parameterType="int">
        SELECT a.ID                as ID,
               a.DeleteFlag        as DeleteFlag,
               a.UserID            as UserID,
               b.Name              as Name,
               a.IsAllow           as IsAllow,
               a.MaintainCause     as MaintainCause,
               c.PlateNumber       as PlateNumber,
               a.MaintenanceAmount as MaintenanceAmount,
               a.State             as State,
               a.VehicleID         as VehicleID,
               a.MaintainDate      as MaintainDate,
               a.IsRevocation      as IsRevocation
        FROM maintain as a
                 left join user as b on a.UserID = b.ID
                 left join vehicle as c on a.VehicleID = c.ID
        WHERE a.DeleteFlag = 0 and a.UserID=#{UserID}
        order by MaintainDate asc
    </select>

    <!--个人所有已允许的维修记录-->
    <select id="getIsAllowbyid" resultMap="BaseResultMap" parameterType="int">
        SELECT a.ID                as ID,
               a.DeleteFlag        as DeleteFlag,
               a.UserID            as UserID,
               b.Name              as Name,
               a.IsAllow           as IsAllow,
               a.MaintainCause     as MaintainCause,
               c.PlateNumber       as PlateNumber,
               a.MaintenanceAmount as MaintenanceAmount,
               a.State             as State,
               a.VehicleID         as VehicleID,
               a.MaintainDate      as MaintainDate,
               a.IsRevocation      as IsRevocation
        FROM maintain as a
                 left join user as b on a.UserID = b.ID
                 left join vehicle as c on a.VehicleID = c.ID
        WHERE a.DeleteFlag = 0 and a.UserID=#{UserID} and a.IsAllow=#{IsAllow}
        order by MaintainDate asc
    </select>

    <!--个人所有已撤销的的维修记录-->
    <select id="getIsRevocationbyid" resultMap="BaseResultMap" parameterType="int">
        SELECT a.ID                as ID,
               a.DeleteFlag        as DeleteFlag,
               a.UserID            as UserID,
               b.Name              as Name,
               a.IsAllow           as IsAllow,
               a.MaintainCause     as MaintainCause,
               c.PlateNumber       as PlateNumber,
               a.MaintenanceAmount as MaintenanceAmount,
               a.State             as State,
               a.VehicleID         as VehicleID,
               a.MaintainDate      as MaintainDate,
               a.IsRevocation      as IsRevocation
        FROM maintain as a
                 left join user as b on a.UserID = b.ID
                 left join vehicle as c on a.VehicleID = c.ID
        WHERE a.DeleteFlag = 0 and a.UserID=#{UserID} and a.IsRevocation=1
        order by MaintainDate asc
    </select>

    <!--未允许的维修申请-->
    <select id="getIsAllowlist" resultMap="BaseResultMap">
        SELECT a.ID                as ID,
               a.DeleteFlag        as DeleteFlag,
               a.UserID            as UserID,
               b.Name              as Name,
               a.IsAllow           as IsAllow,
               a.MaintainCause     as MaintainCause,
               c.PlateNumber       as PlateNumber,
               a.MaintenanceAmount as MaintenanceAmount,
               a.State             as State,
               a.VehicleID         as VehicleID,
               a.MaintainDate      as MaintainDate,
               a.IsRevocation      as IsRevocation
        FROM maintain as a
                 left join user as b on a.UserID = b.ID
                 left join vehicle as c on a.VehicleID = c.ID
        WHERE a.DeleteFlag = 0
          and a.IsAllow = 0
        order by MaintainDate asc
    </select>

    <!--已撤销的维修申请-->
    <select id="getIsRevocationlist" resultMap="BaseResultMap">
        SELECT a.ID                as ID,
               a.DeleteFlag        as DeleteFlag,
               a.UserID            as UserID,
               b.Name              as Name,
               a.IsAllow           as IsAllow,
               a.MaintainCause     as MaintainCause,
               c.PlateNumber       as PlateNumber,
               a.MaintenanceAmount as MaintenanceAmount,
               a.State             as State,
               a.VehicleID         as VehicleID,
               a.MaintainDate      as MaintainDate,
               a.IsRevocation      as IsRevocation
        FROM maintain as a
                 left join user as b on a.UserID = b.ID
                 left join vehicle as c on a.VehicleID = c.ID
        WHERE a.DeleteFlag = 0
          and IsRevocation = 1
        order by MaintainDate asc
    </select>

    <select id="selectmaintainbyID" parameterType="int" resultMap="BaseResultMap1">
        select *
        from maintain
        where DeleteFlag = 0
          and ID = #{ID}
    </select>

    <!--修改维修申请-->
    <update id="updatemaintain" useGeneratedKeys="true" flushCache="true" parameterType="com.model.Maintain">
        update maintain
        set VehicleID=#{VehicleID},
            MaintainCause=#{MaintainCause},
            MaintenanceAmount=#{MaintenanceAmount},
            MaintainDate=#{MaintainDate},
            State=#{State},
            IsRevocation=#{IsRevocation}
        where ID = #{ID}
    </update>

    <insert id="addmaintain" useGeneratedKeys="true" parameterType="com.model.Maintain">
        insert into maintain (ID, DeleteFlag, UserID, IsAllow, MaintainCause, MaintenanceAmount, State, VehicleID,
                              MaintainDate)
            value (#{ID},#{DeleteFlag},#{UserID},#{IsAllow},#{MaintainCause},#{MaintenanceAmount},#{State},#{VehicleID},#{MaintainDate})
    </insert>

    <update id="deletemaintain" useGeneratedKeys="true">
        update maintain
        set DeleteFlag=1
        where ID = #{ID}
    </update>

    <!--撤销维修申请-->
    <update id="revocationmaintain" useGeneratedKeys="true">
        update maintain
        set IsRevocation=1,IsAllow=0
        where ID = #{ID}
    </update>

    <!--修改维修申请状态-->
    <update id="maintainIsAllow" useGeneratedKeys="true">
        update maintain
        set IsAllow=#{IsAllow}
        where ID = #{ID}
    </update>


    <!--    <update id="deleteUser"  parameterType="int" flushCache="true" >-->
    <!--        update user set DeletFlag=1 where id = #{id}-->
    <!--    </update>&ndash;&gt;-->

    <!--    </select>-->

    <!--    <select id="selectoutcarrecordbyuserID" parameterType="int" resultMap="BaseResultMap1">-->
    <!--        select * from maintain where DeleteFlag=0 and UserID=#{userID}-->
    <!--    </select>-->

    <!--    <select id="selectoutcarrecordbyvehicleID" parameterType="int" resultMap="BaseResultMap1">-->
    <!--        select * from maintain where DeleteFlag=0 and VehicleID=#{vehicleID}-->


    <!--    <insert id="register" parameterType="com.model.User" flushCache="true">-->
    <!--        INSERT INTO user-->
    <!--            (Email,Password,UserName,Role,DeleteFlag,CreateTime,Guid,Sex,Name,Phone)-->
    <!--            VALUE(#{Email},#{Password},#{UserName},#{Role},#{DeleteFlag},#{CreateTime},#{Guid},#{Sex},#{Name},#{Phone})-->
    <!--    </insert>-->

    <!--   <update id="updateUser" parameterType="com.model.User" flushCache="true">-->
    <!--        UPDATE user set-->
    <!--                        email = #{email},-->
    <!--                        password = #{password},-->
    <!--                        username = #{username},-->
    <!--                        role = #{role},-->
    <!--                        status = #{status},-->
    <!--                        regTime = #{regTime},-->
    <!--                        regIp = #{regIp}-->
    <!--        WHERE id = #{id}-->
    <!--    </update>-->


</mapper>