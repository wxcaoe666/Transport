<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 设置为IUserDao接口方法提供sql语句配置 -->
<mapper namespace="com.dao.IViolationDao">

    <resultMap id="BaseResultMap" type="com.model.Violationlist">
        <id column="ID" property="ID" jdbcType="INTEGER"/>
        <result column="DeleteFlag" property="DeleteFlag" jdbcType="INTEGER"/>
        <result column="UserID" property="UserID" jdbcType="INTEGER"/>
        <result column="Name" property="Name" jdbcType="VARCHAR"/>
        <result column="ViolationCause" property="ViolationCause" jdbcType="VARCHAR"/>
        <result column="PlateNumber" property="PlateNumber" jdbcType="VARCHAR"/>
        <result column="VehicleID" property="VehicleID" jdbcType="INTEGER"/>
        <result column="Forfeit" property="Forfeit" jdbcType="INTEGER"/>
        <result column="ViolationDate" property="ViolationDate" jdbcType="TIMESTAMP"/>
        <result column="CreateDate" property="CreateDate" jdbcType="TIMESTAMP"/>
    </resultMap>

    <resultMap id="BaseResultMap1" type="com.model.Violation">
        <id column="ID" property="ID" jdbcType="INTEGER"/>
        <result column="DeleteFlag" property="DeleteFlag" jdbcType="INTEGER"/>
        <result column="UserID" property="UserID" jdbcType="INTEGER"/>
        <result column="ViolationCause" property="ViolationCause" jdbcType="VARCHAR"/>
        <result column="VehicleID" property="VehicleID" jdbcType="INTEGER"/>
        <result column="Forfeit" property="Forfeit" jdbcType="INTEGER"/>
        <result column="ViolationDate" property="ViolationDate" jdbcType="TIMESTAMP"/>
        <result column="CreateDate" property="CreateDate" jdbcType="TIMESTAMP"/>
    </resultMap>

<!--所有未删除的违章记录-->
    <select id="getalllist" resultMap="BaseResultMap">
        SELECT
            a.ID as ID,
            a.DeleteFlag as DeleteFlag,
            a.UserID as UserID,
            b.Name as Name,
            a.ViolationCause as ViolationCause,
            c.PlateNumber as PlateNumber,
            a.Forfeit as Forfeit,
            a.VehicleID as VehicleID,
            a.ViolationDate as ViolationDate,
            a.CreateDate as CreateDate
        FROM
            violation as a left join user as b on a.UserID=b.ID
                              left join vehicle as c on a.VehicleID=c.ID
        WHERE a.DeleteFlag=0 order by CreateDate asc
    </select>

    <!--个人所有违章记录-->
    <select id="getalllistbyid" resultMap="BaseResultMap" parameterType="int">
        SELECT
            a.ID as ID,
            a.DeleteFlag as DeleteFlag,
            a.UserID as UserID,
            b.Name as Name,
            a.ViolationCause as ViolationCause,
            c.PlateNumber as PlateNumber,
            a.Forfeit as Forfeit,
            a.VehicleID as VehicleID,
            a.ViolationDate as ViolationDate,
            a.CreateDate as CreateDate
        FROM
            violation as a left join user as b on a.UserID=b.ID
                           left join vehicle as c on a.VehicleID=c.ID
        WHERE a.DeleteFlag=0 and a.UserID=#{UserID} order by CreateDate asc
    </select>

<!-- 根据ID查询违章记录  -->
    <select id="selectviolationbyID" parameterType="int" resultMap="BaseResultMap1">
        select *
        from violation
        where DeleteFlag = 0
          and ID = #{ID}
    </select>

    <!--修改违章记录-->
    <update id="updateviolation" useGeneratedKeys="true" flushCache="true" parameterType="com.model.Violation">
        update violation
        set VehicleID=#{VehicleID},
            ViolationCause=#{ViolationCause},
            Forfeit=#{Forfeit},
            ViolationDate=#{ViolationDate}
        where ID = #{ID}
    </update>

    <insert id="addviolation" useGeneratedKeys="true" parameterType="com.model.Violation">
        insert into violation (ID,DeleteFlag,UserID,ViolationCause,Forfeit,VehicleID,ViolationDate,CreateDate)
            value (#{ID},#{DeleteFlag},#{UserID},#{ViolationCause},#{Forfeit},#{VehicleID},#{ViolationDate},#{CreateDate})
    </insert>

    <!--删除违章记录-->
    <update id="deleteviolation" useGeneratedKeys="true">
        update violation set DeleteFlag=1 where ID=#{ID}
    </update>


<!--    <update id="updateUser" parameterType="com.model.User" flushCache="true">
        UPDATE user set
                        email = #{email},
                        password = #{password},
                        username = #{username},
                        role = #{role},
                        status = #{status},
                        regTime = #{regTime},
                        regIp = #{regIp}
        WHERE id = #{id}
    </update>

    <update id="deleteUser"  parameterType="int" flushCache="true" >
        update user set DeletFlag=1 where id = #{id}
    </update>-->
</mapper>